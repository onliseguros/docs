<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guides on</title><link>https://developers.onli.com.br/docs/guides/</link><description>Recent content in Guides on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:49:15 +0000</lastBuildDate><atom:link href="https://developers.onli.com.br/docs/guides/index.xml" rel="self" type="application/rss+xml"/><item><title>Auto Insurance</title><link>https://developers.onli.com.br/docs/guides/auto-insurance/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>https://developers.onli.com.br/docs/guides/auto-insurance/</guid><description>The Item data for Auto Insurance See below the data available for the items at quotes:
Parameter plate - chassis - model_year - model_name - model_variant - manufacture_year - brand_name - fipe_code Brazilian&amp;rsquo;s &amp;ldquo;FIPE&amp;rdquo; identification code fuel_type - is_0km Flag that determines if the vehicle is new or used drivers List of drivers for the vehicle drivers.</description></item><item><title>Life Insurance</title><link>https://developers.onli.com.br/docs/guides/life-insurance/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>https://developers.onli.com.br/docs/guides/life-insurance/</guid><description>The Policyholder data for Life Insurance See below the data available for the policy_holder at quotes:
Parameter first_name - last_name - cpf Brazilian&amp;rsquo;s document of &amp;ldquo;CPF&amp;rdquo; rg Brazilian&amp;rsquo;s document of &amp;ldquo;RG&amp;rdquo; gender - birth_date Birthdate as yyyy-mm-dd marital_status - occupation_code - occupation_name - income_monthly Amount in cents for monthly income income_yearly Amount in cents for yearly income is_foreign - is_politically_exposed - contact Contact data for this Policyholder contact.</description></item><item><title>Assists and Coverages</title><link>https://developers.onli.com.br/docs/guides/assists-coverages/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>https://developers.onli.com.br/docs/guides/assists-coverages/</guid><description>At this point, you may have in your integration flow a quote_request like this, containing a list of assists and/or coverages available to quote:
{ ... &amp;#34;assists&amp;#34;: [], &amp;#34;coverages&amp;#34;: [] } Assist spec from Quote Request The assist returned from quote request has a JSON structured like this:
Parameter Description id The ID of the Assist name Assist name description Assist description options List of options options.</description></item><item><title>Plans</title><link>https://developers.onli.com.br/docs/guides/plans/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>https://developers.onli.com.br/docs/guides/plans/</guid><description>At this point, you may have in your integration flow a quote_request like this, containing a list of plans available to quote:
{ ... &amp;#34;plans&amp;#34;: [] } Some plans already have a premium amount or installments defined. But you still need to call the requests for quote.
Plan spec from Quote Request The plan returned from quote request has a JSON structured like this:
Parameter Description id The ID of the Plan name Plan name assists List of assists for this Plan coverages List of coverages for this Plan installments List of installments for this Plan { &amp;#34;id&amp;#34;: &amp;#34;string&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;string&amp;#34;, &amp;#34;assists&amp;#34;: [], &amp;#34;coverages&amp;#34;: [], &amp;#34;installments&amp;#34;: [] } Use Plans at Quote Given a quote_request allowing you to use plans, you can send a body at quote the JSON structured like this:</description></item><item><title>How to Paginate</title><link>https://developers.onli.com.br/docs/guides/paginate-lists/</link><pubDate>Fri, 30 Oct 2020 08:49:31 +0000</pubDate><guid>https://developers.onli.com.br/docs/guides/paginate-lists/</guid><description>Paginate using Page Numbers To paginate using page number is very straightforward. You just need to pass as parameter the page number that you need. Optionally, you may indicate the number of rows you are expecting for each page.
See the following example of a retrieving a first page or no pagination at all:
GET /v1/resource
Is the same as:
GET /v1/resource?rows=10&amp;amp;page=1
This query will return the first page, with the default page size:</description></item><item><title>How to Filter</title><link>https://developers.onli.com.br/docs/guides/filter-lists/</link><pubDate>Fri, 30 Oct 2020 08:49:31 +0000</pubDate><guid>https://developers.onli.com.br/docs/guides/filter-lists/</guid><description>Nothing yet, buy you can contribuite üëç</description></item></channel></rss>